cmake_minimum_required(VERSION 3.13)
if (POLICY CMP0025)
    cmake_policy(SET CMP0025 NEW)
endif ()
if (APPLE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
    set(CMAKE_EXE_LINKER_FLAGS "-lobjc -framework IOKit -framework CoreFoundation")
endif()
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
add_definitions(-DDESKTOP -DDEBUG)
option(CMAKE_GENERATOR_PLATFORM x86)
project(duh)

IF(WIN32)
    add_definitions(-DPDC_DLL_BUILD)
    link_directories("${PROJECT_SOURCE_DIR}/platforms/windows")
    include_directories("${PROJECT_SOURCE_DIR}/platforms" "${PROJECT_SOURCE_DIR}/include")
ELSE()
    find_package(Curses REQUIRED)
    include_directories(${CURSES_INCLUDE_DIR})
ENDIF()
add_executable(duh main.cpp src/DuhSwitch.cpp src/DuhSwitch.h terminal/testHarness.cpp terminal/testHarness.h terminal/LocalSwitch.cpp terminal/LocalSwitch.h terminal/GuiManager.cpp terminal/GuiManager.h include/curses.h compat/compat.h compat/SerialPort.cpp compat/SerialPort.h terminal/LocalInput.h src/DuhInput.cpp src/DuhRead.cpp src/DuhRead.h src/checksum.cpp src/checksum.h)
IF(WIN32)
    target_link_libraries(duh "pdcurses")
    target_link_libraries(duh ${PROJECT_SOURCE_DIR}/platforms/windows/libserialport.dll.a)
    target_link_libraries(duh ${PROJECT_SOURCE_DIR}/platforms/windows/libserialport.a)
ELSE()
    find_library(serialport_loc libserialport.a)
    message(STATUS ${serialport_loc})

    add_library(serialport STATIC IMPORTED)
    set_target_properties(serialport PROPERTIES IMPORTED_LOCATION ${serialport_loc})

    target_link_libraries( duh serialport )
    target_link_libraries(duh ${CURSES_LIBRARIES})
ENDIF()
